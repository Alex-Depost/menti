services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - 8000:8000
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgresprod
      - POSTGRES_PORT=5432
      - POSTGRES_DB=app
      - JWT_SECRET_KEY=your_super_secret_key_for_jwt_tokens
    volumes:
      - ./back/static:/app/static
    networks:
      - app-network
    depends_on:
      - postgresprod

  frontend:
    build:
      context: ./asd
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    environment:
      - MODE=production
    networks:
      - app-network

  postgresprod:
    image: postgres:16-alpine
    container_name: postgresprod
    hostname: postgresprod
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/fullchain.pem:/etc/nginx/fullchain.pem
      - ./nginx/privkey.pem:/etc/nginx/privkey.pem
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge